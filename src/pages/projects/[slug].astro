---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';
import { marked } from 'marked';

// Generate static paths for all projects
export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map(project => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

// Get the project data from props
const { project } = Astro.props;

// Render the markdown content
const content = marked.parse(project.body);
---

<MainLayout title={`${project.data.title} - TABILAB`}>
  <div class="container mx-auto px-4 py-12">
    <div class="max-w-4xl mx-auto">
      <a href="/projects" class="text-primary-light hover:underline mb-6 inline-block">
        &larr; Back to Projects
      </a>
      
      <article class="bg-white p-8 rounded-lg shadow-md">
        <div class="flex flex-col md:flex-row gap-8 mb-8">
          <div class="md:w-2/3">
            <h1 class="text-3xl font-bold text-primary mb-4">{project.data.title}</h1>
            <p class="text-gray-700 mb-6">{project.data.description}</p>
            
            <div class="mb-6">
              <h2 class="text-xl font-semibold mb-2">Status</h2>
              <p class="text-gray-700">
                <span class={`inline-block px-3 py-1 rounded-full text-sm ${project.data.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`}>
                  {project.data.status === 'active' ? 'Active' : 'Completed'}
                </span>
                {project.data.startYear && (
                  <span class="ml-2">
                    {project.data.startYear} - {project.data.endYear || 'Present'}
                  </span>
                )}
              </p>
            </div>
            
            {project.data.team && project.data.team.length > 0 && (
              <div class="mb-6">
                <h2 class="text-xl font-semibold mb-2">Team</h2>
                <ul class="list-disc list-inside text-gray-700">
                  {project.data.team.map((member: string) => (
                    <li>{member}</li>
                  ))}
                </ul>
              </div>
            )}
            
            {project.data.links && Object.keys(project.data.links).length > 0 && (
              <div class="mb-6">
                <h2 class="text-xl font-semibold mb-2">Links</h2>
                <div class="flex flex-wrap gap-4">
                  {Object.entries(project.data.links).map(([label, url]) => (
                    <a 
                      href={url} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      class="inline-flex items-center text-primary-light hover:underline"
                    >
                      <span>{label}</span>
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
          
          <div class="md:w-1/3">
            {project.data.image && (
              <img 
                src={project.data.image} 
                alt={project.data.title}
                class="w-full h-auto rounded-lg shadow-md"
                onerror="this.src='/images/placeholder.jpg'; this.onerror=null;"
              />
            )}
          </div>
        </div>
        
        <div class="prose max-w-none" set:html={content} />
      </article>
    </div>
  </div>
</MainLayout> 